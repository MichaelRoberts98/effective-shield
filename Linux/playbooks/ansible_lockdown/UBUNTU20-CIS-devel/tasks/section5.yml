---
- name: "5.1.1 | PATCH | Ensure cron daemon is enabled and running"
  service:
      name: cron
      state: started
      enabled: yes
  when:
      - ubtu20cis_rule_5_1_1
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.1.1
      - cron

- name: "5.1.2 | PATCH | Ensure permissions on /etc/crontab are configured"
  file:
      path: /etc/crontab
      owner: root
      group: root
      mode: 0600
  when:
      - ubtu20cis_rule_5_1_2
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.1.2
      - cron

- name: "5.1.3 | PATCH | Ensure permissions on /etc/cron.hourly are configured"
  file:
      path: /etc/cron.hourly
      owner: root
      group: root
      mode: 0700
  when:
      - ubtu20cis_rule_5_1_3
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.1.3
      - cron

- name: "5.1.4 | PATCH | Ensure permissions on /etc/cron.daily are configured"
  file:
      path: /etc/cron.daily
      owner: root
      group: root
      mode: 0700
  when:
      - ubtu20cis_rule_5_1_4
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.1.4
      - cron

- name: "5.1.5 | PATCH | Ensure permissions on /etc/cron.weekly are configured"
  file:
      path: /etc/cron.weekly
      owner: root
      group: root
      mode: 0700
  when:
      - ubtu20cis_rule_5_1_5
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.1.5
      - cron

- name: "5.1.6 | PATCH | Ensure permissions on /etc/cron.monthly are configured"
  file:
      path: /etc/cron.monthly
      owner: root
      group: root
      mode: 0700
  when:
      - ubtu20cis_rule_5_1_6
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.1.6
      - cron

- name: "5.1.7 | PATCH | Ensure permissions on /etc/cron.d are configured"
  file:
      path: /etc/cron.d
      owner: root
      group: root
      mode: 0700
  when:
      - ubtu20cis_rule_5_1_7
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.1.7
      - cron

- name: "5.1.8 | PATCH | Ensure at/cron is restricted to authorized users"
  block:
      - name: "5.1.8 | PATCH | Ensure at/cron is restricted to authorized users | Remove cron.deny"
        file:
            path: /etc/cron.deny
            state: absent

      - name: "5.1.8 | PATCH | Ensure at/cron is restricted to authorized users | Create cron.allow"
        file:
            path: /etc/cron.allow
            owner: root
            group: root
            mode: 0640
            state: touch
  when:
      - ubtu20cis_rule_5_1_8
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.1.8
      - cron

- name: "5.1.9 | PATCH | Ensure at is restricted to authorized users"
  block:
      - name: "5.1.9 | PATCH | Ensure at is restricted to authorized users | Remove at.deny"
        file:
            path: /etc/at.deny
            state: absent

      - name: "5.1.9 | PATCH | Ensure at is restricted to authorized users | Create at.allow"
        file:
            path: /etc/at.allow
            owner: root
            group: root
            mode: 0640
            state: touch
  when:
      - ubtu20cis_rule_5_1_9
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.1.9
      - cron

- name: "5.2.1 | PATCH | Ensure permissions on /etc/ssh/sshd_config are configured"
  file:
      path: /etc/ssh/sshd_config
      owner: root
      group: root
      mode: 0600
  when:
      - ubtu20cis_rule_5_2_1
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.2.1
      - ssh

- name: "5.2.2 | PATCH | Ensure permissions on SSH private host key files are configured"
  block:
      - name: "5.2.2 | AUDIT | Ensure permissions on SSH private host key files are configured | Find ssh_host private keys"
        find:
            paths: /etc/ssh
            patterns: 'ssh_host_*_key'
        register: ubtu20cis_5_2_2_ssh_host_priv_keys

      - name: "5.2.2 | PATCH | Ensure permissions on SSH private host key files are configured | Set permissions"
        file:
            path: "{{ item.path }}"
            owner: root
            group: root
            mode: 0600
        with_items:
            - "{{ ubtu20cis_5_2_2_ssh_host_priv_keys.files }}"
  when:
      - ubtu20cis_rule_5_2_2
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.2.2
      - ssh

- name: "5.2.3 | PATCH | Ensure permissions on SSH public host key files are configured"
  block:
      - name: "5.2.3 | PATCH | Ensure permissions on SSH public host key files are configured | Find ssh_host public keys"
        find:
            paths: /etc/ssh
            patterns: 'ssh_host_*_key.pub'
        register: ubtu20cis_5_2_3_ssh_host_pub_keys

      - name: "5.2.3 | PATCH | Ensure permissions on SSH public host key files are configured | Set permissions"
        file:
            path: "{{ item.path }}"
            owner: root
            group: root
            mode: 0644
        with_items:
            - "{{ ubtu20cis_5_2_3_ssh_host_pub_keys.files }}"
  when:
      - ubtu20cis_rule_5_2_3
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.2.3
      - ssh

- name: "5.2.4 | PATCH | Ensure SSH LogLevel is appropriate"
  lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^LogLevel|^#LogLevel'
      line: 'LogLevel {{ ubtu20cis_sshd.log_level }}'
      insertafter: '^# Logging'
  notify: restart sshd
  when:
      - ubtu20cis_rule_5_2_4
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.2.4
      - ssh

- name: "5.2.5 | PATCH | Ensure SSH X11 forwarding is disabled"
  lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^X11Forwarding|^#X11Forwarding'
      line: 'X11Forwarding no'
  notify: restart sshd
  when:
      - ubtu20cis_rule_5_2_5
  tags:
      - level2-server
      - level1-workstation
      - patch
      - rule_5.2.5
      - ssh

- name: "5.2.6 | PATCH | Ensure SSH MaxAuthTries is set to 4 or less"
  lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^MaxAuthTries|^#MaxAuthTries'
      line: 'MaxAuthTries {{ ubtu20cis_sshd.max_auth_tries }}'
      insertafter: '^# Authentication'
  notify: restart sshd
  when:
      - ubtu20cis_rule_5_2_6
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.2.6
      - ssh

- name: "5.2.7 | PATCH | Ensure SSH IgnoreRhosts is enabled"
  lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^IgnoreRhosts|^#IgnoreRhosts'
      line: 'IgnoreRhosts yes'
  notify: restart sshd
  when:
      - ubtu20cis_rule_5_2_7
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.2.7
      - ssh

- name: "5.2.8 | PATCH | Ensure SSH HostbasedAuthentication is disabled"
  lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^HostbasedAuthentication|^#HostbasedAuthentication'
      line: 'HostbasedAuthentication no'
  notify: restart sshd
  when:
      - ubtu20cis_rule_5_2_8
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.2.8
      - ssh

- name: "5.2.9 | PATCH | Ensure SSH root login is disabled"
  lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^PermitRootLogin|^#PermitRootLogin'
      line: 'PermitRootLogin no'
  notify: restart sshd
  when:
      - ubtu20cis_rule_5_2_9
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.2.9
      - ssh

- name: "5.2.10 | PATCH | Ensure SSH PermitEmptyPasswords is disabled"
  lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^PermitEmptyPasswords|^#PermitEmptyPasswords'
      line: 'PermitEmptyPasswords no'
      insertafter: '# To disable tunneled clear text passwords'
  notify: restart sshd
  when:
      - ubtu20cis_rule_5_2_10
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.2.10
      - ssh

- name: "5.2.11 | PATCH | Ensure SSH PermitUserEnvironment is disabled"
  lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^PermitUserEnvironment|^#PermitUserEnvironment'
      line: 'PermitUserEnvironment no'
  notify: restart sshd
  when:
      - ubtu20cis_rule_5_2_11
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.2.11
      - ssh

- name: "5.2.12 | PATCH | Ensure only strong Ciphers are used"
  lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^Ciphers|^#Ciphers'
      line: 'Ciphers {{ ubtu20cis_sshd.ciphers }}'
      insertafter: '^# Ciphers and keying'
  notify: restart sshd
  when:
      - ubtu20cis_rule_5_2_12
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.2.12
      - ssh

- name: "5.2.13 | PATCH | Ensure only strong MAC algorithms are used"
  lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^MACs|^#MACs'
      line: 'MACs {{ ubtu20cis_sshd.macs }}'
      insertafter: '^# Ciphers and keying'
  notify: restart sshd
  when:
      - ubtu20cis_rule_5_2_13
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.2.13
      - ssh

- name: "5.2.14 | PATCH | Ensure only strong Key Exchange algorithms are used"
  lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^KexAlgorithms|^#KexAlgorithms'
      line: 'KexAlgorithms {{ ubtu20cis_sshd.kex_algorithms }}'
      insertafter: '^# Ciphers and keying'
  notify: restart sshd
  when:
      - ubtu20cis_rule_5_2_14
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.2.14
      - ssh

- name: "5.2.15 | PATCH | Ensure SSH Idle Timeout Interval is configured"
  lineinfile:
      path: /etc/ssh/sshd_config
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
  with_items:
      - { regexp: '^ClientAliveInterval|^#ClientAliveInterval', line: 'ClientAliveInterval {{ ubtu20cis_sshd.client_alive_interval }}' }
      - { regexp: '^ClientAliveCountMax|^#ClientAliveCountMax', line: 'ClientAliveCountMax {{ ubtu20cis_sshd.client_alive_count_max }}' }
  notify: restart sshd
  when:
      - ubtu20cis_rule_5_2_15
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.2.15
      - sshd

- name: "5.2.16 | PATCH | Ensure SSH LoginGraceTime is set to one minute or less"
  lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^LoginGraceTime|^#LoginGraceTime'
      line: 'LoginGraceTime {{ ubtu20cis_sshd.login_grace_time }}'
      insertafter: '^# Authentication'
  notify: restart sshd
  when:
      - ubtu20cis_rule_5_2_16
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.2.16
      - ssh

- name: "5.2.17 | PATCH | Ensure SSH access is limited"
  block:
      - name: "5.2.17 | PATCH | Ensure SSH access is limited | Add allowed users"
        lineinfile:
            path: /etc/ssh/sshd_config
            regexp: '^AllowUsers|^#AllowUsers'
            line: 'AllowUsers {{ ubtu20cis_sshd.allow_users }}'
        notify: restart sshd
        when: "ubtu20cis_sshd['allow_users']|default('') != ''"

      - name: "5.2.17 | PATCH | Ensure SSH access is limited | Add allowed groups"
        lineinfile:
            path: /etc/ssh/sshd_config
            regexp: '^AllowGroups|^#AllowGroups'
            line: 'AllowGroups {{ ubtu20cis_sshd.allow_groups }}'
        notify: restart sshd
        when: "ubtu20cis_sshd['allow_groups']|default('') != ''"

      - name: "5.2.17 | PATCH | Ensure SSH access is limited | Add deny users"
        lineinfile:
            path: /etc/ssh/sshd_config
            regexp: '^DenyUsers|^#DenyUsers'
            line: 'DenyUsers {{ ubtu20cis_sshd.deny_users }}'
        notify: restart sshd
        when: "ubtu20cis_sshd['deny_users']|default('') != ''"

      - name: "5.2.17 | PATCH | Ensure SSH access is limited | Add deny groups"
        lineinfile:
            path: /etc/ssh/sshd_config
            regexp: '^DenyGroups|^#DenyGroups'
            line: 'DenyGroups {{ ubtu20cis_sshd.deny_groups }}'
        notify: restart sshd
        when: "ubtu20cis_sshd['deny_groups']|default('') != ''"
  when:
      - ubtu20cis_rule_5_2_17
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.2.18
      - ssh

- name: "5.2.18 | PATCH | Ensure SSH warning banner is configured"
  lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^Banner|^#Banner'
      line: Banner /etc/issue.net
      insertafter: '^# no default banner path'
  notify: restart sshd
  when:
      - ubtu20cis_rule_5_2_18
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_5.2.18
      - ssh

- name: "5.2.19 | PATCH | Ensure SSH PAM is enabled"
  lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^UsePAM|^#UsePAM'
      line: 'UsePAM yes'
      insertafter: '^# and ChallengeResponseAuthentication'
  notify: restart sshd
  when:
      - ubtu20cis_rule_5_2_10
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.2.19
      - ssh
      - pam

- name: "5.2.20 | PATCH | Ensure SSH AllowTcpForwarding is disabled"
  lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^AllowTcpForwarding|^#AllowTcpForwarding'
      line: 'AllowTcpForwarding no'
  notify: restart sshd
  when:
      - ubtu20cis_rule_5_2_20
  tags:
      - level2-server
      - level2-workstation
      - patch
      - rule_5.2.20
      - ssh

- name: "5.2.21 | PATCH | Ensure SSH MaxStartups is configured"
  lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^MaxStartups|^#MaxStartups'
      line: 'MaxStartups 10:30:60'
  notify: restart sshd
  when:
      - ubtu20cis_rule_5_2_21
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_5.2.21
      - ssh

- name: "5.2.22 | PATCH | Ensure SSH MaxSessions is set to 4 or less"
  lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^MaxSessions|^#MaxSessions'
      line: 'MaxSessions {{ ubtu20cis_sshd.max_sessions }}'
      insertafter: '^# Authentication'
  notify: restart sshd
  when:
      - ubtu20cis_rule_5_2_22
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.2.22
      - ssh

- name: "5.3.1 | PATCH | Ensure password creation requirements are configured"
  block:
      - name: "SCORED | 5.3.1 | PATCH | Ensure password creation requirements are configured | Install pam_pwquality module"
        apt:
            name: libpam-pwquality
            state: present

      - name: "5.3.1 | PATCH | Ensure password creation requirements are configured | Add minlen"
        lineinfile:
            path: /etc/security/pwquality.conf
            regexp: '^minlen|^# minlen'
            line: minlen = 14

      - name: "5.3.1 | PATCH | Ensure password creation requirements are configured | Add minclass"
        lineinfile:
            path: /etc/security/pwquality.conf
            regexp: '^minclass|^# minclass'
            line: 'minclass = 4'

      - name: "5.3.1 | AUDIT | Ensure password creation requirements are configured | Confirm pwquality module in common-password"
        command: grep 'password.*requisite.*pam_pwquality.so' /etc/pam.d/common-password
        changed_when: false
        failed_when: false
        register: ubtu20cis_5_3_1_pam_pwquality_state

      - name: "5.3.1 | PATCH | Ensure password creation requirements are configured | Set retry to 3 if pwquality exists"
        pamd:
            name: common-password
            type: password
            control: requisite
            module_path: pam_pwquality.so
            module_arguments: 'retry=3'
            state: args_present
        when: ubtu20cis_5_3_1_pam_pwquality_state.stdout != ""

      - name: "5.3.1 | PATCH | Ensure password creation requirements are configured | Set retry to 3 if pwquality does not exist"
        pamd:
            name: common-password
            type: password
            control: required
            module_path: pam_permit.so
            new_type: password
            new_control: requisite
            new_module_path: pam_pwquality.so
            module_arguments: 'retry=3'
            state: after
        when: ubtu20cis_5_3_1_pam_pwquality_state.stdout == ""
  when:
      - ubtu20cis_rule_5_3_1
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.3.1
      - pam

# -------------
# -------------
# There is a bug in pam_tally2.so where the use of the audit keyword may log credentials in the case of user error during authentication.
# To work around this bug the CIS documentation has you setting pam_tally2 to the account section.
# Once bug is fixed please set pam_tally2 to the auth sections. We have those commented out in the task
# -------------
# -------------

# -------------
# -------------
# figure out why pam_deny kills vagrant user. Below is everything working but the pam_deny.so in the last task with_items
# -------------
# -------------
- name: "5.3.2 | PATCH | Ensure lockout for failed password attempts is configured"
  command: /bin/true
  changed_when: false
  failed_when: false
  # block:
  #     - name: "5.3.2 | AUDIT | Ensure lockout for failed password attempts is configured | Confirm pam_tally2.so module in common-auth"
  #       # command: grep 'auth.*required.*pam_tally2.so' /etc/pam.d/common-auth
  #       command: grep 'auth.*required.*pam_tally2.so' /etc/pam.d/common-account
  #       changed_when: false
  #       failed_when: false
  #       register: ubtu20cis_5_3_2_pam_tally2_state

  #     - name: "SCORED | 5.3.2 | PATCH | Ensure lockout for failed password attempts is configured | Set pam_tally2.so settings if exists"
  #       pamd:
  #           # name: common-auth
  #           name: common-account
  #           # type: auth
  #           type: account
  #           control: required
  #           module_path: pam_tally2.so
  #           module_arguments: 'onerr=fail
  #               audit
  #               silent
  #               deny=5
  #               unlock_time=900'
  #       when: ubtu20cis_5_3_2_pam_tally2_state.stdout != ""

  #     - name: "5.3.2 | PATCH | Ensure lockout for failed password attempts is configured | Set pam_tally2.so settings if does not exist"
  #       lineinfile:
  #           # path: /etc/pam.d/common-auth
  #           path: /etc/pam.d/common-account
  #           # line: 'auth       required pam_tally2.so onerr=fail audit silent deny=5 unlock_time=900'
  #           line: 'account       required pam_tally2.so onerr=fail audit silent deny=5 unlock_time=900'
  #           insertafter: '^# end of pam-auth-update config'
  #       when: ubtu20cis_5_3_2_pam_tally2_state == ""

  #     - name: "5.3.2 | PATCH | Ensure lockout for failed password attempts is configured | Set pam_deny.so and pam_tally.so"
  #       lineinfile:
  #           path: /etc/pam.d/common-account
  #           regexp: "{{ item.regexp }}"
  #           line: "{{ item.line }}"
  #           insertafter: '^# end of pam-auth-update config'
  #       with_items:
  #           # - { regexp: '^accout.*requisite.*pam_deny.so', line: 'account    requisite pam_george.so' }
  #           - { regexp: '^account.*required.*pam_tally.so', line: 'account    required pam_tally.so' }
  when:
      - ubtu20cis_rule_5_3_2
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.3.2
      - pamd
      - notimplemented

- name: "5.3.3 | PATCH | Ensure password reuse is limited"
  block:
      - name: "5.3.3 | PATCH | Ensure password reuse is limited | Confirm pam_pwhistory.so in common-password"
        command: grep 'password.*required.*pam_pwhistory.so' /etc/pam.d/common-password
        changed_when: false
        failed_when: false
        register: ubtu20cis_5_3_3_pam_pwhistory_state

      - name: "5.3.3 | PATCH | Ensure password reuse is limited | Set remember value if pam_pwhistory exists"
        pamd:
            name: common-password
            type: password
            control: required
            module_path: pam_pwhistory.so
            module_arguments: 'remember={{ ubtu20cis_pamd_pwhistory_remember }}'
            state: args_present
        when: ubtu20cis_5_3_3_pam_pwhistory_state.stdout != ""

      - name: "5.3.3 | PATCH | Ensure password reuse is limited | Set remember value if pam_pwhistory does no exist"
        lineinfile:
            path: /etc/pam.d/common-password
            line: 'password        required                        pam_pwhistory.so remember={{ ubtu20cis_pamd_pwhistory_remember }}'
            insertafter: '^# end of pam-auth-update config'
        when: ubtu20cis_5_3_3_pam_pwhistory_state.stdout == ""
  when:
      - ubtu20cis_rule_5_3_3
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.3.3
      - pamd

- name: "5.3.4 | PATCH | Ensure password hashing algorithm is SHA-512"
  block:
      - name: "5.3.4 | PATCH | Ensure password hashing algorithm is SHA-512 | Confirm pam_unix.so"
        shell: grep -E '^\s*password\s+(\S+\s+)+pam_unix\.so\s+(\S+\s+)*sha512\s*(\S+\s*)*(\s+#.*)?$' /etc/pam.d/common-password
        changed_when: false
        failed_when: false
        register: ubtu20cis_5_3_4_pam_unix_state

      - name: "5.3.4 | PATCH | Ensure password hashing algorithm is SHA-512 | Set hashing if pam_unix.so exists"
        pamd:
            name: common-password
            type: password
            control: '[success=1 default=ignore]'
            module_path: pam_unix.so
            module_arguments: sha512
            state: args_present
        when: ubtu20cis_5_3_4_pam_unix_state.stdout != ""

      - name: "5.3.4 | PATCH | Ensure password hashing algorithm is SHA-512 | Set hashing if pam_unix.so does not exist"
        lineinfile:
            path: /etc/pam.d/common-password
            line: 'password        [success=1 default=ignore]      pam_unix.so sha512'
            insertafter: '^# end of pam-auth-update config'
        when: ubtu20cis_5_3_4_pam_unix_state.stdout == ""
  when:
      - ubtu20cis_rule_5_3_4
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.3.4
      - pamd

- name: "5.4.1.1 | PATCH | Ensure password expiration is 365 days or less"
  block:
      - name: "5.4.1.1 | PATCH | Ensure password expiration is 365 days or less | Set /etc/login.defs PASS_MAX_DAYS"
        lineinfile:
            path: /etc/login.defs
            regexp: '^PASS_MAX_DAYS|^#PASS_MAX_DAYS'
            line: 'PASS_MAX_DAYS {{ ubtu20cis_pass.max_days }}'
            insertafter: '# Password aging controls'

      - name: "5.4.1.1 | PATCH | Ensure password expiration is 365 days or less | Set existing users PASS_MAX_DAYS"
        command: chage --maxdays {{ ubtu20cis_pass.max_days }} {{ item }}
        failed_when: false
        with_items:
            - "{{ ubtu20cis_passwd| selectattr('uid', '>=', 1000) | map(attribute='id') | list }}"
        when: ubtu20cis_disruption_high
  when:
      - ubtu20cis_rule_5_4_1_1
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.4.1.1
      - user
      - login

- name: "5.4.1.2 | PATCH | Ensure minimum days between password changes is configured"
  block:
      - name: "5.4.1.2 | PATCH | Ensure minimum days between password changes is configured | Set /etc/login.defs PASS_MIN_DAYS"
        lineinfile:
            path: /etc/login.defs
            regexp: '^PASS_MIN_DAYS|^#PASS_MIN_DAYS'
            line: 'PASS_MIN_DAYS {{ ubtu20cis_pass.min_days }}'

      - name: "5.4.1.2 | PATCH | Ensure minimum days between password changes is configured | Set existing users PASS_MIN_DAYS"
        command: chage --mindays {{ ubtu20cis_pass.min_days }} {{ item }}
        failed_when: false
        with_items:
            - "{{ ubtu20cis_passwd| selectattr('uid', '>=', 1000) | map(attribute='id') | list }}"
        when: ubtu20cis_disruption_high
  when:
      - ubtu20cis_rule_5_4_1_2
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.4.1.1
      - user
      - login

- name: "5.4.1.3 | PATCH | Ensure password expiration warning days is 7 or more"
  block:
      - name: "5.4.1.3 | PATCH | Ensure password expiration warning days is 7 or more | Set /etc/login.defs PASS_WARN_AGE"
        lineinfile:
            path: /etc/login.defs
            regexp: '^PASS_WARN_AGE|^#PASS_WARN_AGE'
            line: 'PASS_WARN_AGE {{ ubtu20cis_pass.warn_age }}'

      - name: "5.4.1.3 | PATCH | Ensure password expiration warning days is 7 or more | Set existing users PASS_WARN_AGE"
        command: chage --warndays {{ ubtu20cis_pass.warn_age }} {{ item }}
        failed_when: false
        with_items:
            - "{{ ubtu20cis_passwd| selectattr('uid', '>=', 1000) | map(attribute='id') | list }}"
        when: ubtu20cis_disruption_high
  when:
      - ubtu20cis_rule_5_4_1_3
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.4.1.3
      - user
      - login

- name: "5.4.1.4 | PATCH | Ensure inactive password lock is 30 days or less"
  block:
      - name: "5.4.1.4 | PATCH | Ensure inactive password lock is 30 days or less | Set inactive period for new users"
        command: useradd -D -f {{ ubtu20cis_pass.inactive }}
        failed_when: false

      - name: "5.4.1.4 | PATCH | Ensure inactive password lock is 30 days or less | Set inactive period for existing users"
        command: chage --inactive {{ ubtu20cis_pass.inactive }} {{ item }}
        failed_when: false
        with_items:
            - "{{ ubtu20cis_passwd| selectattr('uid', '>=', 1000) | map(attribute='id') | list }}"
        when: ubtu20cis_disruption_high
  when:
      - ubtu20cis_rule_5_4_1_4
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.4.1.4
      - user
      - login

- name: "5.4.1.5 | PATCH | Ensure all users last password change date is in the past"
  block:
      - name: "5.4.1.5 | PATCH | Ensure all users last password change date is in the past | Get current date in Unix Time"
        shell: echo $(($(date --utc --date "$1" +%s)/86400))
        changed_when: false
        failed_when: false
        register: ubtu20cis_5_4_1_5_current_time

      - name: "5.4.1.5 | PATCH | Ensure all users last password change date is in the past | Get list of users with last changed PW date in future"
        shell: "cat /etc/shadow | awk -F: '{if($3>{{ ubtu20cis_5_4_1_5_current_time.stdout }})print$1}'"
        changed_when: false
        failed_when: false
        register: ubtu20cis_5_4_1_5_user_list

      - name: "5.4.1.5 | PATCH | Ensure all users last password change date is in the past | Warn about users"
        debug:
            msg:
                - "WARNING!!!!The following accounts have the last PW change date in the future"
                - "{{ ubtu20cis_5_4_1_5_user_list.stdout_lines }}"
        when: ubtu20cis_5_4_1_5_user_list.stdout != ""

      - name: "5.4.1.5 | PATCH | Ensure all users last password change date is in the past | Lock accounts with furtre PW changed dates"
        command: passwd --expire {{ item }}
        failed_when: false
        with_items:
            - "{{ ubtu20cis_5_4_1_5_user_list.stdout_lines }}"
        when:
            - ubtu20cis_disruption_high
            - ubtu20cis_5_4_1_5_user_list.stdout != ""
  when:
      - ubtu20cis_rule_5_4_1_5
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.4.1.5
      - user
      - login

- name: "5.4.2 | PATCH | Ensure system accounts are secured"
  block:
      - name: "5.4.2 | PATCH | Ensure system accounts are secured | Set system accounts to login"
        user:
            name: "{{ item }}"
            shell: /sbin/nologin
        with_items:
            - "{{ ubtu20cis_passwd | selectattr('uid', '<', 1000) | map(attribute='id') | list }}"
        when:
            - item != "root"
            - item != "sync"
            - item != "shutdown"
            - item != "halt"

      - name: "5.4.2 | PATCH | Ensure system accounts are secured | Lock non-root system accounts"
        user:
            name: "{{ item }}"
            password_lock: true
        with_items:
            - "{{ ubtu20cis_passwd| selectattr('uid', '<', 1000) | map(attribute='id') | list }}"
        when:
            - item != "root"
  when:
      - ubtu20cis_rule_5_4_2
      - ubtu20cis_disruption_high
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.4.2
      - user
      - system

- name: "5.4.3 | PATCH | Ensure default group for the root account is GID 0"
  block:
      - name: "5.4.3 | PATCH | Ensure default group for the root account is GID 0 | Set root group to GUID 0"
        group:
            name: root
            gid: 0

      - name: "5.4.3 | PATCH | Ensure default group for the root account is GID 0 | Set root user to root group"
        user:
            name: root
            group: root
  when:
      - ubtu20cis_rule_5_4_3
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.4.3
      - user
      - system

- name: "5.4.4 | PATCH | Ensure default user umask is 027 or more restrictive"
  block:
      - name: "5.4.4 | AUDIT | Ensure default user umask is 027 or more restrictive"
        shell: grep -E '^session.*optional.*pam_umask.so' /etc/pam.d/common-session
        changed_when: false
        failed_when: false
        register: ubtu20cis_5_4_4_umask_pam_status

      - name: "5.4.4 | PATCH | Ensure default user umask is 027 or more restrictive"
        lineinfile:
            path: /etc/pam.d/common-session
            line: 'session optional                        pam_umask.so'
            insertbefore: '^# end of pam-auth-update config'
        when: ubtu20cis_5_4_4_umask_pam_status.stdout != ""

      - name: "5.4.4 | PATCH | Ensure default user umask is 027 or more restrictive"
        replace:
            path: "{{ item }}"
            regexp: '(^\s+umask) 002'
            replace: '\1 027'
        with_items:
            - /etc/bash.bashrc
            - /etc/profile
            - /etc/login.defs
  when:
      - ubtu20cis_rule_5_4_4
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.4.4
      - user

- name: "5.4.5 | PATCH | Ensure default user shell timeout is 900 seconds or less"
  blockinfile:
      create: yes
      mode: 0644
      dest: "{{ item.dest }}"
      state: "{{ item.state }}"
      marker: "# {mark} ANSIBLE MANAGED"
      block: |
        # Set session timeout - CIS ID 5.4.5
        TMOUT={{ ubtu20cis_shell_session_timeout.timeout }}
        readonly TMOUT
        export TMOUT
  with_items:
      - { dest: "{{ ubtu20cis_shell_session_timeout.file }}", state: present }
      - { dest: /etc/profile, state: "{{ (ubtu20cis_shell_session_timeout.file == '/etc/profile') | ternary('present', 'absent') }}" }
      - { dest: /etc/bash.bashrc, state: present }
  when:
      - ubtu20cis_rule_5_4_4
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.4.5
      - user

- name: "5.5 | AUDIT | Ensure root login is restricted to system console"
  block:
      - name: "5.5 | AUDIT | Ensure root login is restricted to system console | Get list of all terminals"
        command: cat /etc/securetty
        changed_when: false
        failed_when: false
        register: ubtu20cis_5_5_terminal_list

      - name: "5.5 | AUDIT | Ensure root login is restricted to system console | Message out list"
        debug:
            msg:
                - "WARNING!!!!Below is the list of conoles with root login access"
                - "Please review for any conoles that are not in a physically secure location"
                - "{{ ubtu20cis_5_5_terminal_list.stdout_lines }}"
  when:
      - ubtu20cis_rule_5_5
  tags:
      - level1-server
      - level1-workstation
      - manual
      - audit
      - rule_5.5
      - user

- name: "5.6 | PATCH | Ensure access to the su command is restricted"
  block:
      - name: "5.6 | PATCH | Ensure access to the su command is restricted | Check for pam_wheel.so module"
        command: grep 'auth.*required.*pam_wheel' /etc/pam.d/su
        changed_when: false
        failed_when: false
        register: ubtu20cis_5_6_pam_wheel_status

      - name: "5.6 | PATCH | Ensure access to the su command is restricted | Create empty sugroup"
        group:
            name: "{{ ubtu20cis_su_group }}"

      - name: "5.6 | PATCH | Ensure access to the su command is restricted | Set pam_wheel if exists"
        pamd:
            name: su
            type: auth
            control: required
            module_path: pam_wheel.so
            module_arguments: 'use_uid group={{ ubtu20cis_su_group }}'
        when: ubtu20cis_5_6_pam_wheel_status.stdout != ""

      - name: "5.6 | PATCH | Ensure access to the su command is restricted | Set pam_wheel if does not exist"
        lineinfile:
            path: /etc/pam.d/su
            line: 'auth       required   pam_wheel.so use_uid group={{ ubtu20cis_su_group }}'
            create: yes
        when: ubtu20cis_5_6_pam_wheel_status.stdout == ""
  when:
      - ubtu20cis_rule_5_6
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.6
      - user
