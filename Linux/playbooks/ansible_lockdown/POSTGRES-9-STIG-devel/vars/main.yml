---
# these variables are for enabling tasks to run that will be further controled
# by check_mode to prevent the remediation task from making changes as
# requested
pgs9stig_complex: "{{ pgs9stig_complexity_high or pgs9stig_audit_complex }}"
pgs9stig_disruptive: "{{ pgs9stig_disruption_high or pgs9stig_audit_disruptive }}"

# These vars are made to go in the check_mode property of a task that is
# complex or disruptive, respectively.
pgs9stig_complex_check_mode: "{{ ansible_check_mode or pgs9stig_audit_complex and not pgs9stig_complexity_high }}"
pgs9stig_disruptive_check_mode: "{{ ansible_check_mode or pgs9stig_audit_disruptive and not pgs9stig_disruption_high }}"

# True if we have configured rsyslog
pgs9stig_with_rsyslog: "{{ pgs9stig_configure_rsyslog and pgs9stig_log_destination == 'syslog' }}"

# this allows us to insert a name=value into a line of the format:
# key="name1=value1 name2=value2 nameN=valueN"
pgs9stig_regexp_quoted_params: ^({{ pgs9stig_re_qp_key }})({{ pgs9stig_re_qp_other_params }})({{
        pgs9stig_re_qp_param }}?)({{ pgs9stig_re_qp_other_params }})({{ pgs9stig_re_qp_key_end }})
pgs9stig_replace_quoted_params: \1\2{{ pgs9stig_re_qp_insert | ternary('', ' ') }}{{ param }}={{
        value }}{{ pgs9stig_re_qp_insert | ternary(' ', '') }}\4\5

# none of these regexes create capture groups
pgs9stig_re_qp_key: (?:\s*{{ key }}=")
pgs9stig_re_qp_param: (?:{{ pgs9stig_re_qp_insert | ternary('', ' ?') }}{{
        pgs9stig_re_qp_param_start }}{{ param }}=.*?{{
        pgs9stig_re_qp_param_end }}{{ pgs9stig_re_qp_insert | ternary(' ?', '') }})
pgs9stig_re_qp_other_params: (?:(?!{{ pgs9stig_re_qp_param }}.*).)*{{
        pgs9stig_re_qp_insert | ternary('?', '') }}
pgs9stig_re_qp_param_start: (?<=[" ])
pgs9stig_re_qp_param_end: (?=[" ])
pgs9stig_re_qp_key_end: (?:" *)

# insert the parameter at the beginning or append to the end, default append
pgs9stig_re_qp_insert: "{{ insert | default(not (append | default(true))) }}"
